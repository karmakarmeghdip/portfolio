---
import Layout from "@/layouts/Layout.astro";
import { Button } from "@/components/ui/button";
import { Alert, AlertDescription, AlertTitle } from "@/components/ui/alert";
import { AlertCircle } from "lucide-react";
import { db } from "@/lib/db";
import { posts } from "@/lib/schema/forum-schema";
import { desc, sql } from "drizzle-orm";
import { Skeleton } from "@/components/ui/skeleton";
import PostsCard from "@/components/posts-card.astro";

const sortBy = Astro.url.searchParams.get("sort") || "latest";
const success = Astro.url.searchParams.get("success");

// Simple query to get just the post IDs
const postsData = await db
  .select({
    id: posts.id,
  })
  .from(posts)
  .orderBy(sortBy === "latest" ? 
    desc(posts.createdAt) : 
    desc(sql`COALESCE(
      (SELECT SUM(value) FROM votes WHERE postId = ${posts.id}), 0
    )`)
  )
  .limit(15);
---

<Layout>
  <main class="container mx-auto py-8 px-4">
    <div class="flex justify-between items-center mb-8">
      <h1 class="text-3xl font-bold tracking-tight">Developer Forum</h1>
      <div class="flex gap-4">
        <Button variant={sortBy === "latest" ? "outline" : "ghost"}>
          <a href="/forum?sort=latest">Latest</a>
        </Button>
        <Button variant={sortBy === "top" ? "outline" : "ghost"}>
          <a href="/forum?sort=top">Top</a>
        </Button>
        <Button variant="ghost">Hot</Button>

        <a href="/forum/create"><Button variant="default">New Post</Button></a>
      </div>
    </div>

    {
      success && (
        <div class="mb-4">
          <Alert>
            <AlertCircle className="h-4 w-4" />
            <AlertTitle>Success</AlertTitle>
            <AlertDescription>
              Your post has been created successfully
            </AlertDescription>
          </Alert>
          <script>
            setTimeout(() => {
                window.location.href = "/forum";
            }, 5000);
          </script>
        </div>
      )
    }

    <div class="space-y-4">
      {
        postsData.length === 0 ? (
          <div class="text-center text-muted-foreground">No posts found</div>
        ) : (
          postsData.map((post) => (
            <div>
              <PostsCard postId={post.id} server:defer>
                <div class="flex border rounded-lg p-4 hover:shadow-md transition-shadow" slot="fallback">
                  <div class="flex flex-col items-center py-4 px-2 border-r">
                    <Skeleton className="h-6 w-8 mb-2" />
                    <Skeleton className="h-4 w-6 mb-2" />
                    <Skeleton className="h-6 w-8" />
                  </div>
                  <div class="flex-1 pl-4">
                    <div class="py-3">
                      <Skeleton className="h-4 w-16 mb-2" />
                      <Skeleton className="h-6 w-full max-w-md mb-1" />
                      <Skeleton className="h-4 w-32" />
                    </div>
                    
                    <div class="py-2">
                      <Skeleton className="h-20 w-full max-w-lg mb-4" />
                    </div>
                    
                    <div class="py-3 flex items-center gap-4">
                      <Skeleton className="h-8 w-8 rounded-full" />
                      <Skeleton className="h-4 w-24" />
                      <Skeleton className="h-4 w-20" />
                      <Skeleton className="h-4 w-32" />
                    </div>
                  </div>
                </div>
              </PostsCard>
            </div>
          ))
        )
      }
    </div>

    {
      postsData.length !== 0 && (
        <div class="mt-8 text-center">
          <Button variant="outline">Load More</Button>
        </div>
      )
    }
  </main>
</Layout>
