---
import { auth } from "@/lib/auth";
import { pwaInfo } from "virtual:pwa-info";
import "../styles/global.css";
import { MainLayout } from "@/components/layout/MainLayout";
const page = Astro.url.pathname.split("/")[1] || "home";
const session = await auth.api.getSession({
	headers: Astro.request.headers,
});
---

<script is:inline>
	const getThemePreference = () => {
		if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
			return localStorage.getItem("theme");
		}
		return window.matchMedia("(prefers-color-scheme: dark)").matches
			? "dark"
			: "light";
	};
	const isDark = getThemePreference() === "dark";
	document.documentElement.classList[isDark ? "add" : "remove"]("dark");

	if (typeof localStorage !== "undefined") {
		const observer = new MutationObserver(() => {
			const isDark = document.documentElement.classList.contains("dark");
			localStorage.setItem("theme", isDark ? "dark" : "light");
		});
		observer.observe(document.documentElement, {
			attributes: true,
			attributeFilter: ["class"],
		});
	}
</script>

<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<meta
			property="description"
			content="Meghdip's Personal Website, come discuss Tech with me here"
		/>
		<title>Meghdip's Website</title>
		<script src="/src/pwa.ts"></script>
		{pwaInfo && <Fragment set:html={pwaInfo.webManifest.linkTag} />}
	</head>
	<body>
		<MainLayout activePage={page} session={session} client:load>
			<slot />
		</MainLayout>
	</body>
</html>

<style>
	html,
	body {
		margin: 0;
		width: 100%;
		height: 100%;
	}
</style>
